# configs
from .assets.core import *
from .assets.problem.msegm import *
from .assets.batch_iter.patch_3d import *
from .assets.model.tnet3d import *
from .assets.dataset.isles15 import *
from .assets.training.base import *
# modules
import torch
from dpipe.batch_predict.patch_3d_fixed import Patch3DFixedPredictor
from dpipe.medim.metrics import calc_max_dices
from dpipe.train.lr_policy import Decreasing

data_path = "/nmnt/x04-hdd/ISLES/"

# model
structure = [
    [[16, 16], [], [48, 48]],
    [[32, 64, 32]],
]
stride = 2
activation = torch.nn.ReLU(inplace=True)
logits2pred = torch.nn.Sigmoid()
logits2loss = torch.nn.BCEWithLogitsLoss()
optimize = torch.optim.Adam

# train
# these numbers should be greater
batch_size = 1
n_epochs = 2
n_iters_per_batch = 100

val_metrics = {
    "max_dice": calc_max_dices
}

lr_policy = Decreasing(
    atol=0.01,
    lr_dec_mul=0.7,
    lr_init=1e-3,
    patience=5,
    rtol=0.03,
)

# test / val
y_patch_size = [101, 101, 101]
x_patch_sizes = [y_patch_size]

batch_predict = Patch3DFixedPredictor(
    x_patch_sizes=x_patch_sizes,
    y_patch_size=y_patch_size,
    padding_mode="min",
)
