torch = meta:import
    module = "torch"

logits2pred = torch.nn.Sigmoid()

model = model:torch
    model_core = model_core
    logits2pred = logits2pred
    logits2loss = torch.nn.BCELoss()
    optimize = torch.optim.Adam


model_core = model_core:tnet3d
    n_chans_in = n_chans_in
    n_chans_out = n_chans_out
    structure = structure

model = model:torch
    model_core = model_core
    logits2pred = logits2pred
    logits2loss = logits2loss
    optimize = optimize:tf_optimize
        @init = false
        tf_optimizer_name = "MomentumOptimizer"
        use_nesterov = true
        momentum = 0.6

frozen_model = frozen_model:torch
    model_core = model_core
    logits2pred = logits2pred
    restore_model_path = restore_model_path


batch_predict = batch_predict:patch_3d_fixed
    x_spatial_patch_sizes = [[106, 106, 106], [138, 138, 138]]
    y_spatial_patch_size = [90, 90, 90]
    padding_mode = "min"
