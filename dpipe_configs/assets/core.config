import dpipe.commands as commands
from dpipe.io import ConsoleArguments, load_json
from dpipe.experiment.flat.base import flat
from dpipe.train.train import train_base
from dpipe.train.validator import validate

from functools import partial

console = ConsoleArguments()

train_ids = load_json(path=console.train_ids_path)
val_ids = load_json(path=console.val_ids_path)
ids = load_json(path=console.ids_path)

save_model_path = console.save_model_path
restore_model_path = console.restore_model_path

build_experiment = flat(
    makefile=makefile,
    config_path=console.config_path,
    experiment_path=console.experiment_path,
    split=split
)

train_model = commands.train_model(
    train=train,
    model=model,
    save_model_path=save_model_path
)

log_path = console.log_path
val_metrics = None

train = train_base(
    # lazy
    model=model,
    batch_iter=batch_iter,
    n_epochs=n_epochs,
    log_path=log_path,
    lr_policy=lr_policy,
    validate=validate_step
)

validate_fn = partial(batch_predict.validate, validate_fn=model.do_val_step)
predict_fn = partial(batch_predict.predict, predict_fn=model.do_inf_step)

validate_step = validate(
    # lazy
    load_x=load_x,
    load_y=load_y,
    ids=val_ids,
    metrics=val_metrics,
    validate_fn=validate_fn
)

predict = commands.predict(
    ids=ids,
    output_path=console.output_path,
    load_x=load_x,
    predict_fn=predict_fn,
)
